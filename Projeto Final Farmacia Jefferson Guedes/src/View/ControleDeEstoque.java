/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Dao.CadastroProdutosDAO;
import Dao.ControleDeEstoqueDAO;
import Dao.ControleEntradaDAO;
import Dao.ControleSaidaDAO;
import Dto.CadastroFornecedorDTO;
import Dto.CadastroProdutosDTO;
import Dto.ControleDeEstoqueDTO;
import Dto.ControleEntradaDTO;
import Dto.ControleSaidaDTO;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Manenhos
 */
public class ControleDeEstoque extends javax.swing.JFrame {

    /**
     * Creates new form ControleDeEstoque
     */
    public ControleDeEstoque() {
        initComponents();
        setLocationRelativeTo(null);
        setDefaultCloseOperation(CadastroProdutos.DISPOSE_ON_CLOSE);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSlider1 = new javax.swing.JSlider();
        lTitulocontroledeestoque = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaEstoque = new javax.swing.JTable();
        btInicial = new javax.swing.JButton();
        btMostrar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaStatus = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabelaEntrada2 = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabelaSaida1 = new javax.swing.JTable();
        lFundo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(630, 460));
        setMinimumSize(new java.awt.Dimension(630, 460));
        setPreferredSize(new java.awt.Dimension(630, 460));
        setSize(new java.awt.Dimension(630, 441));
        getContentPane().setLayout(null);

        lTitulocontroledeestoque.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lTitulocontroledeestoque.setText("CONTROLE DE ESTOQUE");
        getContentPane().add(lTitulocontroledeestoque);
        lTitulocontroledeestoque.setBounds(166, 12, 296, 28);

        tabelaEstoque.setForeground(new java.awt.Color(0, 0, 0));
        tabelaEstoque.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cod.Produto", "Nome do Produto", "Estoque MÃ­nimo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaEstoque.setColumnSelectionAllowed(true);
        tabelaEstoque.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tabelaEstoque.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tabelaEstoqueAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(tabelaEstoque);
        tabelaEstoque.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(0, 80, 290, 330);

        btInicial.setBackground(new java.awt.Color(121, 218, 247));
        btInicial.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/casa.png"))); // NOI18N
        btInicial.setBorder(null);
        btInicial.setContentAreaFilled(false);
        btInicial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btInicialActionPerformed(evt);
            }
        });
        getContentPane().add(btInicial);
        btInicial.setBounds(544, 11, 50, 50);

        btMostrar.setText("Mostrar");
        btMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btMostrarActionPerformed(evt);
            }
        });
        getContentPane().add(btMostrar);
        btMostrar.setBounds(30, 30, 71, 25);

        tabelaStatus.setAutoCreateRowSorter(true);
        tabelaStatus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Status"
            }
        ));
        tabelaStatus.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jScrollPane2.setViewportView(tabelaStatus);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(510, 80, 110, 330);

        tabelaEntrada2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Entrada"
            }
        ));
        tabelaEntrada2.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tabelaEntrada2AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane3.setViewportView(tabelaEntrada2);

        getContentPane().add(jScrollPane3);
        jScrollPane3.setBounds(290, 80, 110, 330);

        tabelaSaida1.setAutoCreateRowSorter(true);
        tabelaSaida1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Saida"
            }
        ));
        tabelaSaida1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tabelaSaida1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tabelaSaida1AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane4.setViewportView(tabelaSaida1);

        getContentPane().add(jScrollPane4);
        jScrollPane4.setBounds(400, 80, 110, 330);

        lFundo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/fundinho_1.png"))); // NOI18N
        lFundo.setPreferredSize(new java.awt.Dimension(630, 441));
        getContentPane().add(lFundo);
        lFundo.setBounds(0, -5, 670, 450);

        setBounds(0, 0, 677, 503);
    }// </editor-fold>//GEN-END:initComponents

    private void tabelaEstoqueAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tabelaEstoqueAncestorAdded


    }//GEN-LAST:event_tabelaEstoqueAncestorAdded

    private void btInicialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btInicialActionPerformed
        this.dispose();//fecha o form atual aberto
        Controle c = new Controle();
        c.setVisible(true);
        listarValoresEstoque();
    }//GEN-LAST:event_btInicialActionPerformed

    private void btMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btMostrarActionPerformed
        listarValoresEstoque();
        listarValoresEstoque1();
        listarValoresEstoque2();
    }//GEN-LAST:event_btMostrarActionPerformed

    private void tabelaEntrada2AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tabelaEntrada2AncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_tabelaEntrada2AncestorAdded

    private void tabelaSaida1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tabelaSaida1AncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_tabelaSaida1AncestorAdded

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ControleDeEstoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ControleDeEstoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ControleDeEstoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ControleDeEstoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ControleDeEstoque().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btInicial;
    private javax.swing.JButton btMostrar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JLabel lFundo;
    private javax.swing.JLabel lTitulocontroledeestoque;
    private javax.swing.JTable tabelaEntrada2;
    private javax.swing.JTable tabelaEstoque;
    private javax.swing.JTable tabelaSaida1;
    private javax.swing.JTable tabelaStatus;
    // End of variables declaration//GEN-END:variables

    private void listarValoresEstoque() {
        try {

            CadastroProdutosDAO objCadastroprodutosDAO = new CadastroProdutosDAO();

            DefaultTableModel model = (DefaultTableModel) tabelaEstoque.getModel();
            model.setNumRows(0);

            ArrayList<CadastroProdutosDTO> lista = objCadastroprodutosDAO.pesquisarCadastroProdutos();

            for (int num = 0; num < lista.size(); num++) {
                model.addRow(new Object[]{
                    lista.get(num).getCodigoProduto(),
                    lista.get(num).getItem(),
                    lista.get(num).getEstoqueMinimo(), //lista.get(num).getQuantidade(),
                //lista.get(num).getQuantidadeVendida()
                });

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Listar Valores tela Entrada" + e.getMessage());
        }
    }

    /* ControleSaidaDAO objControleSaidaDAO = new ControleSaidaDAO();
            ControleEntradaDAO objControleEntradaDAO = new ControleEntradaDAO();
            DefaultTableModel model1 = (DefaultTableModel) tabelaEstoque.getModel();
            model.setNumRows(4);
            
            for (int num = 4; num < lista.size(); num++) {
                model.addRow(new Object[]{
                    
                    lista.get(num).getQuantidade(),
                    //lista.get(num).getQuantidadeVendida()
                });*/
    private void listarValoresEstoque1() {
        try {

            ControleEntradaDAO objControleEntradaDAO = new ControleEntradaDAO();

            DefaultTableModel model = (DefaultTableModel) tabelaEntrada2.getModel();
            model.setNumRows(0);

            ArrayList<ControleEntradaDTO> lista = objControleEntradaDAO.pesquisarControleEntrada();

            for (int num = 0; num < lista.size(); num++) {
                model.addRow(new Object[]{
                    lista.get(num).getQuantidade()
                });

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Listar Valores tela Entrada" + e.getMessage());
        }

    }

    private void listarValoresEstoque2() {
        try {

            ControleSaidaDAO objControleSaidaDAO = new ControleSaidaDAO();

            DefaultTableModel model = (DefaultTableModel) tabelaSaida1.getModel();
            model.setNumRows(0);

            ArrayList<ControleSaidaDTO> lista = objControleSaidaDAO.pesquisarControleSaida();

            for (int num = 0; num < lista.size(); num++) {
                model.addRow(new Object[]{
                    lista.get(num).getQuantidadeVendida()
                });

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Listar Valores tela Entrada" + e.getMessage());
        }

    }

    /* private void listarValoresEstoque3() {
        try {

            

            DefaultTableModel model = (DefaultTableModel) tabelaStatus.getModel();
            model.setNumRows(0);

           

            for (int num = 0; num < lista.size(); num++) {
                model.addRow(new Object[]{
                    lista.get(num).getQuantidadeVendida()
                });

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Listar Valores tela Entrada" + e.getMessage());
        }

    }*/
}
